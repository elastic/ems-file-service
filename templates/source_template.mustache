{
    versions: '>=1'
    type: http
    production: false
    wikidata: {{wikidatasubdivision}}
    note: {{note}}
    data: https://sophox.org/regions/geojson.json
    attribution: [
      {
        label: {
          en: Â© OpenStreetMap contributors
        }
        url: {
          en: https://www.openstreetmap.org/copyright
        }
      }
      {
        label: {
          en: Elastic Maps Service
        }
        url: {
          en: https://www.elastic.co/elastic-maps-service
        }
      }
    ]
    fieldMapping: [
        {
          type: id
          name: iso_3166_2
          desc: ISO-3166-2 identifier
        }
        {
          type: property
          name: label_en
          desc: Subdivision name (English)
        }
        {{#languages}}
        {
          type: property
          name: label_{{languagecode}}
          desc: Subdivision name ({{language}})
        }
        {{/languages}}
    ]
    query: {
        sparql:
            '''
            #defaultView:MapRegions
            SELECT
            (if(bound(?id2),?id2,?id) as ?id)
            ?iso_3166_2 ?label_en
            {{#languages}}
            ?label_{{languagecode}}
            {{/languages}}
            WHERE {
              SERVICE <https://query.wikidata.org/sparql> {
              # Using nested query to ensure there is only one ?id2 value
              {SELECT
              ?id
              (SAMPLE(?id2) as ?id2)
              (SAMPLE(?iso_3166_2) as ?iso_3166_2)
              (SAMPLE(?label_en) as ?label_en)
              {{#languages}}
              (SAMPLE(?label_{{languagecode}}) as ?label_{{languagecode}})
              {{/languages}}
              WHERE {
                # List of regions, whose sub-regions we want.
                VALUES ?entity { wd:{{wikidatacountry}} }

                # P150 = "contains administrative territorial entity"
                ?entity {{&containsAdmin}} ?id .
                ?id wdt:P300 ?iso_3166_2

                    OPTIONAL { ?id rdfs:label ?label_en . FILTER(LANG(?label_en) = "en") }
                    {{#languages}}
                    OPTIONAL { ?id rdfs:label ?label_{{languagecode}} . FILTER(LANG(?label_{{languagecode}}) = "{{languagecode}}")}
                    {{/languages}}
              }
              # remove possible ID duplicates
              GROUP BY ?id}
            }
            }
            '''
    }
    name: {{name}}
    legacyIds: [
    {{#legacyIds}}
      {{legacyId}}
    {{/legacyIds}}
    ]
    humanReadableName: {
    {{#i18nlabels}}
      {{lang}}: {{label}}
    {{/i18nlabels}}
    }
    emsFormats: [
    {{#formats}}
      {
        type: {{type}}
        file: {{file}}
        default: {{default}}
        {{#meta}}
        meta: {
          feature_collection_path: 'data'
        }
        {{/meta}}
      }
    {{/formats}}
    ]
    ttl: 108000
    weight: 0
    createdAt: {{creationtime}}
    id: {{id}}
}
